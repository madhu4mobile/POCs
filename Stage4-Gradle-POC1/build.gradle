//
//buildscript {
//    repositories {
//        mavenCentral()
//    }
//    dependencies {
//        classpath "com.github.spacanowski:variable-managment-plugin:1.0"
//    }
//}
//apply plugin: "pl.spc.variable.management"
//
//project.ext {
//    //variablesManagementUrl = 'http://<address>/<path>/<versions_json_file>'
//}



plugins {
    id 'java'
}

group 'org.automation.tools'
version '1.0-SNAPSHOT'

project.ext {
    myprop = "a"
    karateVersion = "0.9.6"
}

repositories {
    mavenCentral()
    mavenLocal()
}

apply plugin: "java"

//def karateVersion = "0.9.6"

dependencies {
    testCompile group: 'com.intuit.karate', name:'karate-apache', version: "${karateVersion}"
    testCompile group: 'com.intuit.karate', name:'karate-junit5', version: "${karateVersion}"
//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
//    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
//    test//Compile 'com.intuit.karate:karate-junit5:"${karateVersion}"'
//    testCompile 'com.intuit.karate:karate-apache:"${karateVersion}"'
}

sourceSets {
    test {
        resources {
            srcDir file('src/test/java')
            exclude '**/*.java'
        }
    }
}

task karateExecute(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    main = System.properties.getProperty('mainClass')
}

jar {
    from configurations.compile.collect { fileTree("src/test")}
    //mainfest.attributes "Main-Class" : "org.automation.tools.Main"
}

test {
    useJUnitPlatform()
}